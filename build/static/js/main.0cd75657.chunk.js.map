{"version":3,"sources":["logic/Piece.js","logic/Game.js","GameDesk.js","App.js","reportWebVitals.js","index.js"],"names":["Piece","x","y","type","this","Game","winCondition","drawCondition","pieces","piece","some","Error","push","chosenNumber","i","length","pointsToWin","piecesOnWinningPositionsx","piecesOnWinningPositionsy","piecesOnWinningPositionsxy","piecesOnWinningPositionsyx","v","undefined","p","console","log","game","GameDesk","testFunction","sizeCheck","Number","inputValueWin","onClick","array","position","className","inputFunction","e","setInputValue","target","value","restartGame","setMaxLinesToWin","setWhosTurn","setInputValueWin","setBoard","setisDisabled","setRestartButton","myBoard","boardSize","startGame","inputValue","addWinCondition","addDrawCondition","Math","floor","boardCreator","useEffect","attributes","nodeValue","myArr","board","slice","whosTurn","myPiece","addPiece","getWinner","alert","React","useState","isDisabled","maxLinesToWin","restartButton","src","height","alt","onChange","disabled","map","toString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","piece1","piece2"],"mappings":"yPAAaA,EAKX,WAAYC,EAAGC,EAAGC,GAAO,yBAJzBF,EAAI,EAIoB,KAHxBC,EAAI,EAGoB,KAFxBC,KAAO,SAGLC,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKD,KAAOA,G,sBCRHE,EAAb,iDACEC,aAAe,EADjB,KAEEC,cAAgB,EAFlB,KAGEC,OAAS,GAHX,qDAKWC,GACP,GAAIL,KAAKI,OAAOE,MAAK,SAACT,GAAD,OAAOA,EAAEA,IAAMQ,EAAMR,GAAKA,EAAEC,IAAMO,EAAMP,KAC3D,MAAM,IAAIS,MAAM,iCAElBP,KAAKI,OAAOI,KAAKH,KATrB,sCAWkBI,GACdT,KAAKE,aAAeO,IAZxB,uCAcmBA,GACfT,KAAKG,cAAgBM,IAfzB,kCAmBI,IAAK,IAAIC,EAAI,EAAGA,EAAIV,KAAKI,OAAOO,OAAQD,IAAK,CAO3C,IANA,IAAIE,EAAcZ,KAAKE,aACnBW,EAA4B,GAC5BC,EAA4B,GAC5BC,EAA6B,GAC7BC,EAA6B,GAC7BX,EAAQL,KAAKI,OAAOM,GACfO,EAAI,EAAGA,EAAIjB,KAAKI,OAAOO,OAAQM,IACtC,QAAuBC,IAAnBlB,KAAKI,OAAOa,GAAkB,CAEhC,GAAIZ,EAAMN,OAASC,KAAKI,OAAOa,GAAGlB,KAChC,IAAK,IAAIoB,EAAI,EAAGA,EAAIP,EAAaO,IAE7Bd,EAAMP,EAAIqB,IAAMnB,KAAKI,OAAOa,GAAGnB,GAC/BO,EAAMR,IAAMG,KAAKI,OAAOa,GAAGpB,GAE3BgB,EAA0BL,KAAKH,GAKrC,GAAIA,EAAMN,OAASC,KAAKI,OAAOa,GAAGlB,KAChC,IAAK,IAAIoB,EAAI,EAAGA,EAAIP,EAAaO,IAE7Bd,EAAMR,EAAIsB,IAAMnB,KAAKI,OAAOa,GAAGpB,GAC/BQ,EAAMP,IAAME,KAAKI,OAAOa,GAAGnB,GAE3BgB,EAA0BN,KAAKH,GAKrC,GAAIA,EAAMN,OAASC,KAAKI,OAAOa,GAAGlB,KAChC,IAAK,IAAIoB,EAAI,EAAGA,EAAIP,EAAaO,IAE7Bd,EAAMR,EAAIsB,IAAMnB,KAAKI,OAAOa,GAAGpB,GAC/BQ,EAAMP,EAAIqB,IAAMnB,KAAKI,OAAOa,GAAGnB,IAE/BsB,QAAQC,IAAIrB,KAAKI,OAAOa,GAAGlB,MAC3BiB,EAA2BR,KAAKH,IAKtC,GAAIA,EAAMN,OAASC,KAAKI,OAAOa,GAAGlB,KAChC,IAAK,IAAIoB,EAAI,EAAGA,EAAIP,EAAaO,IAE7Bd,EAAMR,EAAIsB,IAAMnB,KAAKI,OAAOa,GAAGpB,GAC/BQ,EAAMP,EAAIqB,IAAMnB,KAAKI,OAAOa,GAAGnB,IAE/BsB,QAAQC,IAAIrB,KAAKI,OAAOa,GAAGlB,MAC3BgB,EAA2BP,KAAKH,IAM1C,GAAIQ,EAA0BF,QAAUC,EACtC,OAAO,EAET,GAAIE,EAA0BH,QAAUC,EACtC,OAAO,EAET,GAAII,EAA2BL,QAAUC,EACvC,OAAO,EAET,GAAIG,EAA2BJ,QAAUC,EACvC,OAAO,EAGX,OAAIZ,KAAKG,gBAAkBH,KAAKI,OAAOO,QAC9B,WA1Fb,KCKIW,EAAO,IAAIrB,EAqMAsB,MApMf,WACE,IAAIC,EAAe,SAAC3B,GAElB,IADA,IAAI4B,EAAY,GACPf,EAAI,EAAGA,EAAIgB,OAAOC,GAAgBjB,IACzCe,EAAUjB,KACR,qBACEoB,QAASA,EACTC,MAAOhC,EAAE,GAAG,GACZiC,SAAUpB,EACVqB,UAAWlC,EAAEa,GAAG,MAItB,OAAOe,GAGLO,EAAgB,SAACC,GACnBC,EAAcD,EAAEE,OAAOC,QAMrBC,EAAc,WAChBf,EAAO,IAAIrB,EACXqC,EAAiB,IACjBC,GAAY,GACZL,EAAc,IACdM,EAAiB,IACjBC,EAAS,IACTC,GAAc,GACdC,EAAiB,KAGfC,EAAU,GACVC,EAAY,EAiBZC,EAAY,WAEZpB,OAAOqB,IAAe,GACtBrB,OAAOqB,IAAerB,OAAOC,MAE7BL,EAAO,IAAIrB,GACN+C,gBAAgBtB,OAAOqB,IAC5BzB,EAAK2B,iBAAiBvB,OAAOC,GAAiBD,OAAOC,IACrDgB,EAAiB,CAAC,MAGhBO,KAAKC,MAAMxB,GAAiB,IAAM,GAChB,KAAlBA,GACAuB,KAAKC,MAAMxB,GAAiB,GAE5Be,GAAc,GAEZQ,KAAKC,MAAMxB,IAAkB,KAjClB,WACjBkB,EAAYnB,OAAOC,GACnB,IAAK,IAAIjB,EAAI,EAAGA,EAAImC,EAAWnC,IAAK,CAClCkC,EAAQpC,KAAK,IACb,IAAK,IAAIS,EAAI,EAAGA,EAAI4B,EAAW5B,IAC7B2B,EAAQlC,GAAGF,KAAK,CAAC,QAASE,EAAGO,KA6B7BmC,GACAX,EAASG,IAETF,GAAc,KAKpBW,qBAAU,eAEV,IAAIzB,EAAU,SAACK,GACb,IAAIJ,EAAQH,OAAOO,EAAEE,OAAOmB,WAAWzB,MAAM0B,WACzCzB,EAAWJ,OAAOO,EAAEE,OAAOmB,WAAWxB,SAASyB,WAC/CC,EAAQC,EAAMC,QAElB,GAAkC,UAA9BF,EAAM3B,GAAOC,GAAU,GAAgB,CACzC,IAAiB,IAAb6B,EAAoB,CACtBH,EAAM3B,GAAOC,GAAU,GAAK,SAC5B,IAAI8B,EAAU,IAAIhE,EAChB4D,EAAM3B,GAAOC,GAAU,GACvB2B,EAAM5B,GAAOC,GAAU,GACvB2B,EAAM5B,GAAOC,GAAU,IAEzBR,EAAKuC,SAASD,GAEdnB,EAASe,GACTjB,GAAY,IAEa,IAArBjB,EAAKwC,cACPC,MAAM,eACNjB,KAGJ,IAAiB,IAAba,EAAmB,CACrBH,EAAM3B,GAAOC,GAAU,GAAK,QAC5B,IAAI8B,EAAU,IAAIhE,EAChB4D,EAAM3B,GAAOC,GAAU,GACvB2B,EAAM5B,GAAOC,GAAU,GACvB2B,EAAM5B,GAAOC,GAAU,IAEzBR,EAAKuC,SAASD,GAEdnB,EAASe,GACTjB,GAAY,IAEa,IAArBjB,EAAKwC,cACPC,MAAM,cACNjB,KAGqB,SAArBxB,EAAKwC,cACPC,MAAM,eACNjB,OA1HY,EA+HYkB,IAAMC,UAAS,GA/H3B,mBA+HbN,EA/Ha,KA+HHpB,EA/HG,OAgIMyB,IAAMC,SAAS,IAhIrB,mBAgIbR,EAhIa,KAgINhB,EAhIM,OAiIgBuB,IAAMC,WAjItB,mBAiIblB,EAjIa,KAiIDb,EAjIC,OAkIsB8B,IAAMC,WAlI5B,mBAkIbtC,EAlIa,KAkIEa,EAlIF,OAmIgBwB,IAAMC,UAAS,GAnI/B,mBAmIbC,EAnIa,KAmIDxB,EAnIC,OAoIsBsB,IAAMC,SAAS,IApIrC,mBAoIbE,EApIa,KAoIE7B,EApIF,OAqIsB0B,IAAMC,SAAS,IArIrC,mBAqIbG,EArIa,KAqIEzB,EArIF,KAuIlB,OACE,sBAAKZ,UAAU,MAAf,UACE,qBACEsC,IAA8B,cAC9BC,OAAO,QACPC,IAAI,gBAEN,sBAAKxC,UAAU,SAAf,UACE,qBACEsC,IAA8B,gBAC9BC,OAAO,QACPC,IAAI,gBAEN,sBAAKxC,UAAU,WAAf,sCAEE,uBACEyC,SApIa,SAACvC,GACtBO,EAAiBP,EAAEE,OAAOC,QAoIlBA,MAAOT,EACP8C,SAAUP,EACVnC,UAAU,YAEZ,wBAAQH,QA9GM,WAChBF,OAAOC,IAAkB,GAAKD,OAAOC,IAAkB,IACzDW,EAAiB,CAACX,KA4GoBI,UAAU,WAA5C,uBAIDoC,EAAcO,KAAI,SAAC7E,GAAD,OACjB,qBAAKkC,UAAU,SAAf,SACE,sBAAKA,UAAU,aAAf,uCAC6BlC,EAAE8E,WAC7B,uBACEH,SAAUxC,EACVI,MAAOW,EACP0B,SAAUP,EACVnC,UAAU,YAEZ,wBAAQH,QAASkB,EAAWf,UAAU,WAAtC,gCAMN,qBAAKA,UAAU,QAAf,SACG0B,EAAMiB,KAAI,SAAC7E,GAAD,OACT,qBAAKkC,UAAU,MAAf,SAAsBP,EAAa3B,UAGtCuE,EAAcM,KAAI,SAAC7E,GAAD,OACjB,wBAAQ+B,QAASS,EAAaN,UAAU,WAAxC,gCAKJ,qBACEsC,IAA8B,eAC9BC,OAAO,QACPC,IAAI,oBCxLGK,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,IAEA,IAAIvD,EAAO,IAAIrB,EACXI,EAAQ,IAAIT,EAAM,EAAG,EAAG,SACxB+F,EAAS,IAAI/F,EAAM,EAAG,EAAG,SACzBgG,EAAS,IAAIhG,EAAM,EAAG,EAAG,SAC7B0B,EAAKuC,SAASxD,GACdiB,EAAKuC,SAAS8B,GACdrE,EAAKuC,SAAS+B,K","file":"static/js/main.0cd75657.chunk.js","sourcesContent":["export class Piece {\r\n  x = 0;\r\n  y = 0;\r\n  type = \"circle\";\r\n\r\n  constructor(x, y, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n  }\r\n}\r\n","export class Game {\r\n  winCondition = 0;\r\n  drawCondition = 0;\r\n  pieces = [];\r\n\r\n  addPiece(piece) {\r\n    if (this.pieces.some((x) => x.x === piece.x && x.y === piece.y)) {\r\n      throw new Error(\"You put element on taken spot\");\r\n    }\r\n    this.pieces.push(piece);\r\n  }\r\n  addWinCondition(chosenNumber) {\r\n    this.winCondition = chosenNumber;\r\n  }\r\n  addDrawCondition(chosenNumber) {\r\n    this.drawCondition = chosenNumber;\r\n  }\r\n\r\n  getWinner() {\r\n    for (let i = 0; i < this.pieces.length; i++) {\r\n      let pointsToWin = this.winCondition;\r\n      let piecesOnWinningPositionsx = [];\r\n      let piecesOnWinningPositionsy = [];\r\n      let piecesOnWinningPositionsxy = [];\r\n      let piecesOnWinningPositionsyx = [];\r\n      let piece = this.pieces[i];\r\n      for (let v = 0; v < this.pieces.length; v++) {\r\n        if (this.pieces[v] !== undefined) {\r\n          //////// x\r\n          if (piece.type === this.pieces[v].type) {\r\n            for (let p = 0; p < pointsToWin; p++) {\r\n              if (\r\n                piece.y + p === this.pieces[v].y &&\r\n                piece.x === this.pieces[v].x\r\n              ) {\r\n                piecesOnWinningPositionsx.push(piece);\r\n              }\r\n            }\r\n          }\r\n          //////// y\r\n          if (piece.type === this.pieces[v].type) {\r\n            for (let p = 0; p < pointsToWin; p++) {\r\n              if (\r\n                piece.x + p === this.pieces[v].x &&\r\n                piece.y === this.pieces[v].y\r\n              ) {\r\n                piecesOnWinningPositionsy.push(piece);\r\n              }\r\n            }\r\n          }\r\n          //////// x+y+\r\n          if (piece.type === this.pieces[v].type) {\r\n            for (let p = 0; p < pointsToWin; p++) {\r\n              if (\r\n                piece.x + p === this.pieces[v].x &&\r\n                piece.y + p === this.pieces[v].y\r\n              ) {\r\n                console.log(this.pieces[v].type);\r\n                piecesOnWinningPositionsyx.push(piece);\r\n              }\r\n            }\r\n          }\r\n          //////// y-x+\r\n          if (piece.type === this.pieces[v].type) {\r\n            for (let p = 0; p < pointsToWin; p++) {\r\n              if (\r\n                piece.x + p === this.pieces[v].x &&\r\n                piece.y - p === this.pieces[v].y\r\n              ) {\r\n                console.log(this.pieces[v].type);\r\n                piecesOnWinningPositionsxy.push(piece);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (piecesOnWinningPositionsx.length >= pointsToWin) {\r\n        return true;\r\n      }\r\n      if (piecesOnWinningPositionsy.length >= pointsToWin) {\r\n        return true;\r\n      }\r\n      if (piecesOnWinningPositionsyx.length >= pointsToWin) {\r\n        return true;\r\n      }\r\n      if (piecesOnWinningPositionsxy.length >= pointsToWin) {\r\n        return true;\r\n      }\r\n    }\r\n    if (this.drawCondition === this.pieces.length) {\r\n      return \"draw\";\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"./GameDesk.css\";\r\nimport { Game } from \"./logic/Game\";\r\nimport { Piece } from \"./logic/Piece\";\r\n\r\nlet game = new Game();\r\nfunction GameDesk() {\r\n  let testFunction = (x) => {\r\n    let sizeCheck = [];\r\n    for (let i = 0; i < Number(inputValueWin); i++) {\r\n      sizeCheck.push(\r\n        <div\r\n          onClick={onClick}\r\n          array={x[0][1]}\r\n          position={i}\r\n          className={x[i][0]}\r\n        ></div>\r\n      );\r\n    }\r\n    return sizeCheck;\r\n  };\r\n\r\n  let inputFunction = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  let inputFunctionWin = (e) => {\r\n    setInputValueWin(e.target.value);\r\n  };\r\n\r\n  let restartGame = () => {\r\n    game = new Game();\r\n    setMaxLinesToWin([]);\r\n    setWhosTurn(false);\r\n    setInputValue(\"\");\r\n    setInputValueWin(\"\");\r\n    setBoard([]);\r\n    setisDisabled(false);\r\n    setRestartButton([]);\r\n  };\r\n\r\n  let myBoard = [];\r\n  let boardSize = 0;\r\n  let boardCreator = () => {\r\n    boardSize = Number(inputValueWin);\r\n    for (let i = 0; i < boardSize; i++) {\r\n      myBoard.push([]);\r\n      for (let v = 0; v < boardSize; v++) {\r\n        myBoard[i].push([\"empty\", i, v]);\r\n      }\r\n    }\r\n  };\r\n\r\n  let selectBoardSize = () => {\r\n    if (Number(inputValueWin) >= 1 && Number(inputValueWin) <= 20) {\r\n      setMaxLinesToWin([inputValueWin]);\r\n    }\r\n  };\r\n\r\n  let startGame = () => {\r\n    if (\r\n      Number(inputValue) >= 1 &&\r\n      Number(inputValue) <= Number(inputValueWin)\r\n    ) {\r\n      game = new Game();\r\n      game.addWinCondition(Number(inputValue));\r\n      game.addDrawCondition(Number(inputValueWin) * Number(inputValueWin));\r\n      setRestartButton([\"x\"]);\r\n\r\n      if (\r\n        Math.floor(inputValueWin) % 1 === 0 &&\r\n        inputValueWin !== \"\" &&\r\n        Math.floor(inputValueWin) > 0\r\n      ) {\r\n        setisDisabled(true);\r\n      }\r\n      if (Math.floor(inputValueWin) <= 20) {\r\n        boardCreator();\r\n        setBoard(myBoard);\r\n      } else {\r\n        setisDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {});\r\n\r\n  let onClick = (e) => {\r\n    let array = Number(e.target.attributes.array.nodeValue);\r\n    let position = Number(e.target.attributes.position.nodeValue);\r\n    let myArr = board.slice();\r\n\r\n    if (myArr[array][position][0] === \"empty\") {\r\n      if (whosTurn === false) {\r\n        myArr[array][position][0] = \"circle\";\r\n        let myPiece = new Piece(\r\n          myArr[array][position][1],\r\n          board[array][position][2],\r\n          board[array][position][0]\r\n        );\r\n        game.addPiece(myPiece);\r\n\r\n        setBoard(myArr);\r\n        setWhosTurn(true);\r\n\r\n        if (game.getWinner() === true) {\r\n          alert(\"Circle Won!\");\r\n          startGame();\r\n        }\r\n      }\r\n      if (whosTurn === true) {\r\n        myArr[array][position][0] = \"cross\";\r\n        let myPiece = new Piece(\r\n          myArr[array][position][1],\r\n          board[array][position][2],\r\n          board[array][position][0]\r\n        );\r\n        game.addPiece(myPiece);\r\n\r\n        setBoard(myArr);\r\n        setWhosTurn(false);\r\n\r\n        if (game.getWinner() === true) {\r\n          alert(\"Cross Won!\");\r\n          startGame();\r\n        }\r\n      }\r\n      if (game.getWinner() === \"draw\") {\r\n        alert(\"Its a draw!\");\r\n        startGame();\r\n      }\r\n    }\r\n  };\r\n\r\n  let [whosTurn, setWhosTurn] = React.useState(false);\r\n  let [board, setBoard] = React.useState([]);\r\n  let [inputValue, setInputValue] = React.useState();\r\n  let [inputValueWin, setInputValueWin] = React.useState();\r\n  let [isDisabled, setisDisabled] = React.useState(false);\r\n  let [maxLinesToWin, setMaxLinesToWin] = React.useState([]);\r\n  let [restartButton, setRestartButton] = React.useState([]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"myboard.png\"}\r\n        height=\"275px\"\r\n        alt=\"Tic-Tac-Toe\"\r\n      />\r\n      <div className=\"column\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"tictactoe.png\"}\r\n          height=\"100px\"\r\n          alt=\"Tic-Tac-Toe\"\r\n        />\r\n        <div className=\"firstSet\">\r\n          Select Board Size: 1 - 20\r\n          <input\r\n            onChange={inputFunctionWin}\r\n            value={inputValueWin}\r\n            disabled={isDisabled}\r\n            className=\"myInput\"\r\n          />\r\n          <button onClick={selectBoardSize} className=\"myButton\">\r\n            Select\r\n          </button>\r\n        </div>\r\n        {maxLinesToWin.map((x) => (\r\n          <div className=\"column\">\r\n            <div className=\"secoundSet\">\r\n              Select Win Condition: 1 - {x.toString()}\r\n              <input\r\n                onChange={inputFunction}\r\n                value={inputValue}\r\n                disabled={isDisabled}\r\n                className=\"myInput\"\r\n              />\r\n              <button onClick={startGame} className=\"myButton\">\r\n                Start Game\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div className=\"board\">\r\n          {board.map((x) => (\r\n            <div className=\"row\">{testFunction(x)}</div>\r\n          ))}\r\n        </div>\r\n        {restartButton.map((x) => (\r\n          <button onClick={restartGame} className=\"myButton\">\r\n            Restart Game\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"myboard2.png\"}\r\n        height=\"275px\"\r\n        alt=\"Tic-Tac-Toe\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameDesk;\r\n","import \"./App.css\";\r\nimport { Piece } from \"./logic/Piece\";\r\nimport GameDesk from \"./GameDesk\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <GameDesk />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Game } from \"./logic/Game\";\r\nimport { Piece } from \"./logic/Piece\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nlet game = new Game();\r\nlet piece = new Piece(0, 0, \"cross\");\r\nlet piece1 = new Piece(1, 0, \"cross\");\r\nlet piece2 = new Piece(2, 0, \"cross\");\r\ngame.addPiece(piece);\r\ngame.addPiece(piece1);\r\ngame.addPiece(piece2);\r\n//console.log(game.pieces);\r\n//console.log(game.getWinner());\r\n"],"sourceRoot":""}